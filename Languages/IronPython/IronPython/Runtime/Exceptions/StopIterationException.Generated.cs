/* ****************************************************************************
 *
 * Copyright (c) Microsoft Corporation. 
 *
 * This source code is subject to terms and conditions of the Apache License, Version 2.0. A 
 * copy of the license can be found in the License.html file at the root of this distribution. If 
 * you cannot locate the  Apache License, Version 2.0, please send an email to 
 * dlr@microsoft.com. By using this source code in any fashion, you are agreeing to be bound 
 * by the terms of the Apache License, Version 2.0.
 *
 * You must not remove this notice, or any other, from this software.
 *
 *
 * ***************************************************************************/

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Microsoft.Scripting.Runtime;
using IronPython.Runtime.Operations;
using IronPython.Runtime.Types;
using IronPython.Modules;

namespace IronPython.Runtime.Exceptions {
    /// <summary>
    /// .NET exception that is thrown to signal the end of iteration in Python
    /// </summary>

    #region Generated StopIterationException

    // *** BEGIN GENERATED CODE ***
    // generated by function: gen_one_exception_specialized from: generate_exceptions.py


    [Serializable]
    public class StopIterationException : Exception, IPythonAwareException {
        private object _pyExceptionObject;
        private List<DynamicStackFrame> _frames;
        private TraceBack _traceback;
        private object _value;
        private readonly PythonContext _context;

        public StopIterationException(CodeContext context, object value)
            : base(PythonOps.ToString(value)) { 
            _value = value; 
            _context = context.LanguageContext; 
        }
        public StopIterationException(CodeContext context)
            : base() {
            _context = context.LanguageContext;
        }

        public StopIterationException() : base() { }
        public StopIterationException(string msg) : base(msg) { }
        public StopIterationException(string message, Exception innerException)
            : base(message, innerException) {
        }
#if FEATURE_SERIALIZATION
        protected StopIterationException(SerializationInfo info, StreamingContext context) : base(info, context) { }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2123:OverrideLinkDemandsShouldBeIdenticalToBase")]
        public override void GetObjectData(SerializationInfo info, StreamingContext context) {
            info.AddValue("frames", _frames);
            info.AddValue("traceback", _traceback);
            base.GetObjectData(info, context);
        }
#endif

        object IPythonAwareException.PythonException {
            get { 
                if (_pyExceptionObject == null) {
                    PythonExceptions.BaseException newEx;
                    if (_context == null || !_context.PythonOptions.Python30) {
                        newEx = new PythonExceptions.BaseException(PythonExceptions.StopIteration);
                    } else {
                        newEx = new Builtin._StopIteration3k(Builtin._stopIterationException3x);
                    }
                    newEx.__init__();
                    if (_value != null) {
                        newEx.args = new[] { _value };
                    }
                    _pyExceptionObject = newEx;
                    newEx.__dict__["value"] = _value;
                }
                return _pyExceptionObject; 
            }
            set { _pyExceptionObject = value; }
        }

        public object GetValue(CodeContext context) {
            if (context.LanguageContext.PythonOptions.Python30 && _pyExceptionObject != null) {
                return PythonOps.GetBoundAttr(context, _pyExceptionObject, "value");
            }
            return _value;
        }

        List<DynamicStackFrame> IPythonAwareException.Frames {
            get { return _frames; }
            set { _frames = value; }
        }

        TraceBack IPythonAwareException.TraceBack {
            get { return _traceback; }
            set { _traceback = value; }
        }
    }


    // *** END GENERATED CODE ***

    #endregion
}
